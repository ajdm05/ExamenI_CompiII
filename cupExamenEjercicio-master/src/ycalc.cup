import java.util.*;
import java_cup.runtime.*;
import Tree.*;
   
parser code {:
    public Hashtable<String, Integer> variables
        = new Hashtable<String, Integer>();
    public void report_error(String message, Object info) {
   
        StringBuilder m = new StringBuilder("Error");
   
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
   
            if (s.left >= 0) {
                m.append(" in line "+(s.left+1));
                if (s.right >= 0)
                    m.append(", column "+(s.right+1));
            }
        }
   
        m.append(" : "+message);
   
        System.err.println(m);
    }
   
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};

terminal           TERMINAL, NON, NONTERMINAL;
terminal           SEMI, COMMA, COLON, EQUALS, BAR, EMPTY;
terminal Integer   NUMBER;
terminal String    ID;

non terminal cup;
non terminal symbol_list, production_list;
non terminal symbol;
non terminal declares_terminals, declares_non_terminals;
non terminal terminals_name;
non terminal production;
non terminal terminal_id;
non terminal rhs_list, rhs;
non terminal production_part_list, production_part;
non terminal optional_label;

cup ::= symbol_list production_list;

symbol_list ::= symbol_list symbol
            | symbol;

symbol ::= TERMINAL declares_terminals
         | NON TERMINAL declares_non_terminals
         | NONTERMINAL declares_non_terminals;

terminals_name ::= terminals_name COMMA ID:d {: System.out.println(d);:}
                 | ID:i {: System.out.println(i);:};

declares_terminals ::= terminals_name SEMI;

declares_non_terminals ::= terminals_name SEMI;

production_list ::= production_list production
                  | production;

production ::= ID COLON COLON EQUALS rhs_list SEMI;

rhs_list ::= rhs_list BAR production_part_list
         | production_part_list;

production_part_list ::= production_part_list production_part;

production_part ::= ID optional_label;

optional_label ::= COLON ID:i {: System.out.println("Label: " + i);:};

terminal_id ::= ID;